добавлена полная поддрежка ID (при получение и пересылке);
добавлена поддержка объединяющей сессии между созданием контроля и ws;
сделано оповещение всех кроме себя при добавлении контроля (на основе сессии выше);
проверка такого оповещения на двух клиентах одновременно (добавление нового имени контроля при работающем другом тестовом клиенте).


добавлена поддержка валидации:
клиентский сервис для оповещения;
модификация контроллера;
рефакторинг для исправления алгоритма;
проверка на нескольких подключенных клиентах одновременно.


добавлена поддержка GET-запросов для новой реализация загрузки справочной таблицы на клиент (модель и контроллер). в проверочной утилите (вместе с проверкой выше) проверено получение контролей.

на клиенте модифицирован код POST-запроса.
в бэке добавлен маршрут с контроллером для будущей отдельно выведенной системы ручной проверки алгоритма извне.
для этого типа запросов в контроллере реализована проверка входящих данных на соответствие дробным конечным десятичным числам. проверяется и на принадлежность к числовому типу, и предоставляется возможность вводить строки в эти поля (проверка через regexp).
в браузерной утилите для этого проверено-отлажено пять типов случаев валидации входящих данных.

и подготовлен консольный вариант проверки из-за невозможности подсунуть не число в исходнике js (код закомментирован)
(Uncaught SyntaxError: identifier starts immediately after numeric literal):
curl -d '{"id":"123","params":[{"id":1,"value":1}, {"id":2,"value":2},{"id":3,"value":3},{"id":4,"value":4},{"id":5,"value":"5"}]}' -H 'Content-Type: application/json' http://localhost:8081/api/validate

при попытке засунуть не число - ошибка парсинга (SyntaxError: Unexpected token ... in JSON at position ...    at JSON.parse):
curl -d '{"id":"123","params":[{"id":1,"value":1}, {"id":2,"value":2},{"id":3,"value":3},{"id":4,"value":4},{"id":5,"value":w}]}' -H 'Content-Type: application/json' http://localhost:8081/api/validate


--
backend приложения на 8081-ом порту.

до запуска нужно создать БД с такими параметрами:
app/config/dbConfig.js
исполнив скрипт:
mysql -u root -p health_monitor < health_monitor.mysql

запрос существуюших контролей:
check_requests.txt


backend websocket устройства, генерирующего события находится на 8080-ом порту.


frontend

http://localhost:8081
